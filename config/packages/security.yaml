security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    role_hierarchy:
        ROLE_COMPANY_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_COMPANY_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api_docs:
            pattern: ^/api/docs
            security: false
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~
        main:
            pattern: ^/
            security: false

    access_control:
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/impersonate, roles: ROLE_SUPER_ADMIN }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
